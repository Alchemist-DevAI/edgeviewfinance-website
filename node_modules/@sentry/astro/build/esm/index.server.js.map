{"version":3,"file":"index.server.js","sources":["../../src/index.server.ts"],"sourcesContent":["// Node SDK exports\n// Unfortunately, we cannot `export * from '@sentry/node'` because in prod builds,\n// Vite puts these exports into a `default` property (Sentry.default) rather than\n// on the top - level namespace.\n\nimport { sentryAstro } from './integration';\nimport { handleRequest } from './server/middleware';\n\n// Hence, we export everything from the Node SDK explicitly:\nexport {\n  addBreadcrumb,\n  addEventProcessor,\n  addIntegration,\n  amqplibIntegration,\n  anthropicAIIntegration,\n  // eslint-disable-next-line deprecation/deprecation\n  anrIntegration,\n  // eslint-disable-next-line deprecation/deprecation\n  disableAnrDetectionForCallback,\n  captureCheckIn,\n  captureConsoleIntegration,\n  captureEvent,\n  captureException,\n  captureFeedback,\n  captureMessage,\n  captureSession,\n  close,\n  connectIntegration,\n  consoleIntegration,\n  contextLinesIntegration,\n  continueTrace,\n  createGetModuleFromFilename,\n  createTransport,\n  cron,\n  dataloaderIntegration,\n  dedupeIntegration,\n  defaultStackParser,\n  endSession,\n  expressErrorHandler,\n  expressIntegration,\n  extraErrorDataIntegration,\n  fastifyIntegration,\n  firebaseIntegration,\n  flush,\n  fsIntegration,\n  functionToStringIntegration,\n  generateInstrumentOnce,\n  genericPoolIntegration,\n  getActiveSpan,\n  getAutoPerformanceIntegrations,\n  getClient,\n  getCurrentScope,\n  getDefaultIntegrations,\n  getGlobalScope,\n  getIsolationScope,\n  getRootSpan,\n  getSentryRelease,\n  getSpanDescendants,\n  getSpanStatusFromHttpCode,\n  getTraceData,\n  getTraceMetaTags,\n  httpHeadersToSpanAttributes,\n  winterCGHeadersToDict,\n  graphqlIntegration,\n  hapiIntegration,\n  httpIntegration,\n  // eslint-disable-next-line deprecation/deprecation\n  inboundFiltersIntegration,\n  eventFiltersIntegration,\n  initOpenTelemetry,\n  isInitialized,\n  isEnabled,\n  kafkaIntegration,\n  koaIntegration,\n  knexIntegration,\n  lastEventId,\n  linkedErrorsIntegration,\n  localVariablesIntegration,\n  lruMemoizerIntegration,\n  makeNodeTransport,\n  modulesIntegration,\n  mongoIntegration,\n  mongooseIntegration,\n  mysql2Integration,\n  mysqlIntegration,\n  nativeNodeFetchIntegration,\n  NodeClient,\n  nodeContextIntegration,\n  onUncaughtExceptionIntegration,\n  onUnhandledRejectionIntegration,\n  openAIIntegration,\n  parameterize,\n  postgresIntegration,\n  postgresJsIntegration,\n  prismaIntegration,\n  childProcessIntegration,\n  createSentryWinstonTransport,\n  redisIntegration,\n  requestDataIntegration,\n  rewriteFramesIntegration,\n  Scope,\n  SDK_VERSION,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  setContext,\n  setCurrentClient,\n  setExtra,\n  setExtras,\n  setHttpStatus,\n  setMeasurement,\n  setTag,\n  setTags,\n  setupConnectErrorHandler,\n  setupExpressErrorHandler,\n  setupHapiErrorHandler,\n  setupKoaErrorHandler,\n  setUser,\n  spanToBaggageHeader,\n  spanToJSON,\n  spanToTraceHeader,\n  spotlightIntegration,\n  startInactiveSpan,\n  startNewTrace,\n  suppressTracing,\n  startSession,\n  startSpan,\n  startSpanManual,\n  systemErrorIntegration,\n  tediousIntegration,\n  trpcMiddleware,\n  updateSpanName,\n  vercelAIIntegration,\n  withActiveSpan,\n  withIsolationScope,\n  withMonitor,\n  withScope,\n  supabaseIntegration,\n  instrumentSupabaseClient,\n  zodErrorsIntegration,\n  profiler,\n  logger,\n  consoleLoggingIntegration,\n  wrapMcpServerWithSentry,\n  NODE_VERSION,\n  featureFlagsIntegration,\n  type FeatureFlagsIntegration,\n  launchDarklyIntegration,\n  buildLaunchDarklyFlagUsedHandler,\n  openFeatureIntegration,\n  OpenFeatureIntegrationHook,\n  statsigIntegration,\n  unleashIntegration,\n} from '@sentry/node';\n\nexport { init } from './server/sdk';\n\nexport default sentryAstro;\n\n// This exports the `handleRequest` middleware for manual usage\nexport { handleRequest };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;"}