{"version":3,"file":"Header.astro_astro_type_script_index_0_lang.CF926ND0.js","sources":["../../../src/components/ui/Header.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["  // Minimal script for essential functionality only\n  document.addEventListener('DOMContentLoaded', () => {\n    // Smooth scrolling for anchor links\n    const anchorLinks = document.querySelectorAll('a[href^=\"#\"]');\n    \n    anchorLinks.forEach(link => {\n      link.addEventListener('click', (e) => {\n        const href = link.getAttribute('href');\n        if (href && href !== '#') {\n          e.preventDefault();\n          const targetId = href.substring(1);\n          const targetElement = document.getElementById(targetId);\n          \n          if (targetElement) {\n            const headerHeight = 80; // Height of fixed header\n            const targetPosition = targetElement.offsetTop - headerHeight;\n            \n            window.scrollTo({\n              top: targetPosition,\n              behavior: 'smooth'\n            });\n          }\n        }\n      });\n    });\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["n","link","e","href","targetId","targetElement","targetPosition"],"mappings":"CA0bE,UAAA,CAAA,GAAA,CAAA,IAAA,EAAA,OAAA,OAAA,IAAA,OAAA,OAAA,OAAA,IAAA,OAAA,OAAA,WAAA,IAAA,WAAA,OAAA,KAAA,IAAA,KAAA,CAAA,EAAA,EAAA,eAAA,CAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,GAAA,EAAA,GAAA,EAAA,UAAA,CAAA,IAAA,EAAA,OAAA,OAAA,IAAA,OAAA,OAAA,OAAA,IAAA,OAAA,OAAA,WAAA,IAAA,WAAA,OAAA,KAAA,IAAA,KAAA,CAAA,EAAAA,EAAA,IAAA,EAAA,QAAA,MAAAA,IAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,gBAAAA,CAAA,EAAA,uCAAA,EAAA,yBAAA,mDAAA,GAAA,CAAA,MAAA,CAAA,CAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAE9B,SAAS,iBAAiB,cAAc,EAEhD,QAAQC,GAAQ,CAC1BA,EAAK,iBAAiB,QAAUC,GAAM,CACpC,MAAMC,EAAOF,EAAK,aAAa,MAAM,EACrC,GAAIE,GAAQA,IAAS,IAAK,CACxBD,EAAE,eAAA,EACF,MAAME,EAAWD,EAAK,UAAU,CAAC,EAC3BE,EAAgB,SAAS,eAAeD,CAAQ,EAEtD,GAAIC,EAAe,CAEjB,MAAMC,EAAiBD,EAAc,UAAY,GAEjD,OAAO,SAAS,CACd,IAAKC,EACL,SAAU,SACX,CACH,CACF,CACF,CAAC,CACH,CAAC,CACH,CAAC"}