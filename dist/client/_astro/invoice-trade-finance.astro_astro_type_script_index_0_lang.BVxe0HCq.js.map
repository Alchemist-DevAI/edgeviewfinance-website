{"version":3,"file":"invoice-trade-finance.astro_astro_type_script_index_0_lang.BVxe0HCq.js","sources":["../../../src/pages/invoice-trade-finance.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["  document.addEventListener('DOMContentLoaded', function() {\r\n    const faqToggles = document.querySelectorAll('.faq-toggle');\r\n    \r\n    faqToggles.forEach(toggle => {\r\n      toggle.addEventListener('click', function() {\r\n        const content = this.nextElementSibling;\r\n        const icon = this.querySelector('svg');\r\n        \r\n        // Close all other accordions\r\n        faqToggles.forEach(otherToggle => {\r\n          if (otherToggle !== this) {\r\n            const otherContent = otherToggle.nextElementSibling;\r\n            const otherIcon = otherToggle.querySelector('svg');\r\n            otherContent.classList.add('hidden');\r\n            otherIcon.style.transform = 'rotate(0deg)';\r\n          }\r\n        });\r\n        \r\n        // Toggle current accordion\r\n        content.classList.toggle('hidden');\r\n        icon.style.transform = content.classList.contains('hidden') ? 'rotate(0deg)' : 'rotate(180deg)';\r\n      });\r\n    });\r\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["faqToggles","toggle","content","icon","otherToggle","otherContent","otherIcon"],"mappings":"CAiVE,UAAA,CAAA,GAAA,CAAA,IAAA,EAAA,OAAA,OAAA,IAAA,OAAA,OAAA,OAAA,IAAA,OAAA,OAAA,WAAA,IAAA,WAAA,OAAA,KAAA,IAAA,KAAA,CAAA,EAAA,EAAA,eAAA,CAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,GAAA,EAAA,GAAA,EAAA,UAAA,CAAA,IAAA,EAAA,OAAA,OAAA,IAAA,OAAA,OAAA,OAAA,IAAA,OAAA,OAAA,WAAA,IAAA,WAAA,OAAA,KAAA,IAAA,KAAA,CAAA,EAAA,EAAA,IAAA,EAAA,QAAA,MAAA,IAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,gBAAA,CAAA,EAAA,uCAAA,EAAA,yBAAA,mDAAA,GAAA,CAAA,MAAA,CAAA,CAAA,SAAS,iBAAiB,mBAAoB,UAAW,CACvD,MAAMA,EAAa,SAAS,iBAAiB,aAAa,EAE1DA,EAAW,QAAQC,GAAU,CAC3BA,EAAO,iBAAiB,QAAS,UAAW,CAC1C,MAAMC,EAAU,KAAK,mBACfC,EAAO,KAAK,cAAc,KAAK,EAGrCH,EAAW,QAAQI,GAAe,CAChC,GAAIA,IAAgB,KAAM,CACxB,MAAMC,EAAeD,EAAY,mBAC3BE,EAAYF,EAAY,cAAc,KAAK,EACjDC,EAAa,UAAU,IAAI,QAAQ,EACnCC,EAAU,MAAM,UAAY,cAC9B,CACF,CAAC,EAGDJ,EAAQ,UAAU,OAAO,QAAQ,EACjCC,EAAK,MAAM,UAAYD,EAAQ,UAAU,SAAS,QAAQ,EAAI,eAAiB,gBACjF,CAAC,CACH,CAAC,CACH,CAAC"}