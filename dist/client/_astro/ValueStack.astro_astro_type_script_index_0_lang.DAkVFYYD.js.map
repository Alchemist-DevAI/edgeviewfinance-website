{"version":3,"file":"ValueStack.astro_astro_type_script_index_0_lang.DAkVFYYD.js","sources":["../../../src/components/assessment/ValueStack.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["  // Handle value stack CTA - navigate to start page\n  document.getElementById('value-stack-cta')?.addEventListener('click', () => {\n    window.location.href = '/finance-ready-assessment/start';\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":[],"mappings":"uiBAoLE,SAAS,eAAe,iBAAiB,GAAG,iBAAiB,QAAS,IAAM,CAC1E,OAAO,SAAS,KAAO,iCACzB,CAAC"}