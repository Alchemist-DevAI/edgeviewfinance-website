{"version":3,"file":"equipment-finance-excavator.astro_astro_type_script_index_0_lang.Cx-nG3Zj.js","sources":["../../../src/pages/success-stories/equipment-finance-excavator.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["// Page analytics tracking\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  // Track case study page view\r\n  if (typeof gtag !== 'undefined') {\r\n    gtag('event', 'page_view', {\r\n      page_title: 'Equipment Finance Case Study',\r\n      page_location: window.location.href,\r\n      case_study_type: 'equipment-finance',\r\n      business_type: 'concreting',\r\n      finance_amount: '180000'\r\n    });\r\n  }\r\n\r\n  // Track CTA clicks\r\n  const ctaButtons = document.querySelectorAll('a[href*=\"contact\"], a[href*=\"tel:\"]');\r\n  ctaButtons.forEach(button => {\r\n    button.addEventListener('click', function() {\r\n      if (typeof gtag !== 'undefined') {\r\n        gtag('event', 'cta_click', {\r\n          cta_location: 'case_study_page',\r\n          cta_type: this.href.includes('tel:') ? 'phone' : 'contact_form',\r\n          case_study_type: 'equipment-finance'\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // Track related story clicks\r\n  const relatedLinks = document.querySelectorAll('a[href*=\"/success-stories/\"]');\r\n  relatedLinks.forEach(link => {\r\n    link.addEventListener('click', function() {\r\n      if (typeof gtag !== 'undefined') {\r\n        gtag('event', 'related_story_click', {\r\n          from_case_study: 'equipment-finance-excavator',\r\n          to_case_study: this.href.split('/').pop()\r\n        });\r\n      }\r\n    });\r\n  });\r\n});\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["n","button","link"],"mappings":"CA8vBA,UAAA,CAAA,GAAA,CAAA,IAAA,EAAA,OAAA,OAAA,IAAA,OAAA,OAAA,OAAA,IAAA,OAAA,OAAA,WAAA,IAAA,WAAA,OAAA,KAAA,IAAA,KAAA,CAAA,EAAA,EAAA,eAAA,CAAA,GAAA,0CAAA,CAAA,MAAA,CAAA,CAAA,GAAA,EAAA,GAAA,EAAA,UAAA,CAAA,IAAA,EAAA,OAAA,OAAA,IAAA,OAAA,OAAA,OAAA,IAAA,OAAA,OAAA,WAAA,IAAA,WAAA,OAAA,KAAA,IAAA,KAAA,CAAA,EAAAA,EAAA,IAAA,EAAA,QAAA,MAAAA,IAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,gBAAAA,CAAA,EAAA,uCAAA,EAAA,yBAAA,mDAAA,GAAA,CAAA,MAAA,CAAA,CAAA,SAAS,iBAAiB,mBAAoB,UAAW,CAEnD,OAAO,KAAS,KAClB,KAAK,QAAS,YAAa,CACzB,WAAY,+BACZ,cAAe,OAAO,SAAS,KAC/B,gBAAiB,oBACjB,cAAe,aACf,eAAgB,SACjB,EAIgB,SAAS,iBAAiB,qCAAqC,EACvE,QAAQC,GAAU,CAC3BA,EAAO,iBAAiB,QAAS,UAAW,CACtC,OAAO,KAAS,KAClB,KAAK,QAAS,YAAa,CACzB,aAAc,kBACd,SAAU,KAAK,KAAK,SAAS,MAAM,EAAI,QAAU,eACjD,gBAAiB,oBAClB,CAEL,CAAC,CACH,CAAC,EAGoB,SAAS,iBAAiB,8BAA8B,EAChE,QAAQC,GAAQ,CAC3BA,EAAK,iBAAiB,QAAS,UAAW,CACpC,OAAO,KAAS,KAClB,KAAK,QAAS,sBAAuB,CACnC,gBAAiB,8BACjB,cAAe,KAAK,KAAK,MAAM,GAAG,EAAE,IAAA,EACrC,CAEL,CAAC,CACH,CAAC,CACH,CAAC"}