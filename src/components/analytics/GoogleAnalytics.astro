---
// Google Analytics 4 Component
// Optimized for Astro SSR/SSG and Vercel deployment

interface Props {
  measurementId?: string;
}

const { measurementId } = Astro.props;
const GA4_MEASUREMENT_ID = measurementId || import.meta.env.PUBLIC_GA4_MEASUREMENT_ID;

// Only load GA4 in production or when explicitly enabled
const isProduction = import.meta.env.PROD;
const isDevelopment = import.meta.env.DEV;
const shouldLoadGA = isProduction || import.meta.env.PUBLIC_ENABLE_GA_DEV === 'true';

// Validate measurement ID
const isValidMeasurementId = GA4_MEASUREMENT_ID && GA4_MEASUREMENT_ID.startsWith('G-');

if (!isValidMeasurementId && shouldLoadGA) {
  console.warn('[GoogleAnalytics] Invalid or missing GA4 Measurement ID');
}
---

{shouldLoadGA && isValidMeasurementId && (
  <>
    <!-- Google Analytics GA4 - Optimized for Astro -->
    <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA4_MEASUREMENT_ID}`}></script>
    <script is:inline define:vars={{ GA4_MEASUREMENT_ID }}>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      
      // Configure GA4 with enhanced settings for better tracking
      gtag('config', GA4_MEASUREMENT_ID, {
        // Optimize for Core Web Vitals
        page_title: document.title,
        page_location: window.location.href,
        
        // Enhanced ecommerce and engagement tracking
        send_page_view: true,
        
        // Privacy-friendly settings
        anonymize_ip: true,
        allow_google_signals: false,
        allow_ad_personalization_signals: false,
        
        // Performance optimizations
        transport_type: 'beacon',
        
        // Custom dimensions can be added here if needed
        custom_map: {}
      });

      // Defer non-critical tracking to improve LCP
      setTimeout(function() {
        // Track Core Web Vitals if available
        if ('web-vital' in window) {
          gtag('config', GA4_MEASUREMENT_ID, {
            custom_map: {
              'custom_dimension_1': 'web_vitals_lcp',
              'custom_dimension_2': 'web_vitals_fid',
              'custom_dimension_3': 'web_vitals_cls'
            }
          });
        }

        // Enhanced error tracking
        window.addEventListener('error', function(e) {
          gtag('event', 'exception', {
            'description': e.error?.message || 'Unknown error',
            'fatal': false,
            'page_title': document.title,
            'page_location': window.location.href
          });
        });

        // Track page engagement
        let startTime = Date.now();
        window.addEventListener('beforeunload', function() {
          const timeOnPage = Math.round((Date.now() - startTime) / 1000);
          gtag('event', 'page_view_duration', {
            'value': timeOnPage,
            'event_category': 'engagement'
          });
        });
      }, 1000); // Defer for 1 second to prioritize LCP
    </script>

    {isDevelopment && (
      <script is:inline>
        console.log('[GoogleAnalytics] GA4 loaded in development mode with ID:', GA4_MEASUREMENT_ID);
      </script>
    )}
  </>
)}

{isDevelopment && !shouldLoadGA && (
  <script is:inline>
    console.log('[GoogleAnalytics] GA4 disabled in development mode. Set PUBLIC_ENABLE_GA_DEV=true to enable.');
  </script>
)}