---
interface Props {
  placeholder?: string;
}

const { placeholder = "Search finance insights..." } = Astro.props;
---

<div class='search-container relative w-full'>
  <div class='relative'>
    <input
      type='search'
      id='blog-search'
      class='search-input w-full px-4 py-3 pr-12 text-base border-2 border-gray-300 bg-white text-ColorBlack placeholder-gray-500 focus:border-ColorBlue focus:outline-none transition-colors duration-300 font-InstrumentSans'
      placeholder={placeholder}
      aria-label='Search finance articles'
      style='min-width: 280px;'
    />
    <button type='button' class='search-icon absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-500'>
      <svg class='w-5 h-5' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
        <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'></path>
      </svg>
    </button>
  </div>
  
  <!-- Search Results Dropdown (hidden by default, shown via JavaScript) -->
  <div 
    id='search-results' 
    class='search-results absolute top-full left-0 right-0 bg-white border-2 border-ColorBlue shadow-xl max-h-96 overflow-y-auto z-50 hidden'
  >
    <div class='p-4 text-center text-gray-600'>
      <svg class='w-8 h-8 mb-2 text-gray-300 mx-auto' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
        <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'></path>
      </svg>
      <p class='text-sm font-InstrumentSans'>Start typing to search finance articles...</p>
    </div>
  </div>
</div>

<!-- Search Results Template (hidden, used by JavaScript) -->
<template id='search-result-template'>
  <div class='search-result-item p-4 border-b border-gray-200 cursor-pointer hover:bg-ColorOffWhite transition-colors duration-200'>
    <h4 class='search-result-title font-bold text-ColorBlack mb-1 text-sm font-InstrumentSans'></h4>
    <p class='search-result-excerpt text-xs text-gray-600 mb-2 font-InstrumentSans'></p>
    <div class='search-result-meta flex items-center gap-3 text-xs text-gray-500 font-InstrumentSans'>
      <span class='category'></span>
      <span class='read-time'></span>
    </div>
  </div>
</template>

<script>
  // Simple search functionality
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('blog-search') as HTMLInputElement;
    const searchResults = document.getElementById('search-results');
    const resultTemplate = document.getElementById('search-result-template') as HTMLTemplateElement;

    if (!searchInput || !searchResults || !resultTemplate) return;

    let searchTimeout: NodeJS.Timeout;

    // Mock data for demonstration - in real implementation, this would fetch from API
    const articles = [
      {
        title: "Equipment Finance ROI: What Queensland Businesses Need to Know",
        excerpt: "The ROI calculation method that Australian businesses use to optimize equipment purchases",
        category: "Equipment Finance",
        readTime: "8 min read",
        slug: "equipment-finance-roi-queensland-trades"
      },
      {
        title: "Cash Flow Mastery for Growing Businesses",
        excerpt: "Why seasonal businesses fail at cash flow (and the 3-step fix that works)",
        category: "Working Capital",
        readTime: "6 min read",
        slug: "cash-flow-mastery-growing-trades"
      },
      {
        title: "Commercial Property Finance for Queensland Businesses",
        excerpt: "Strategic insights on commercial property finance for Australian businesses",
        category: "Commercial Property",
        readTime: "12 min read",
        slug: "commercial-property-finance-queensland-trades"
      }
    ];

    searchInput.addEventListener('input', function() {
      clearTimeout(searchTimeout);
      const query = this.value.trim().toLowerCase();

      if (query.length < 2) {
        searchResults.classList.add('hidden');
        return;
      }

      searchTimeout = setTimeout(() => {
        performSearch(query);
      }, 300);
    });

    function performSearch(query: string) {
      const filtered = articles.filter(article => 
        article.title.toLowerCase().includes(query) ||
        article.excerpt.toLowerCase().includes(query) ||
        article.category.toLowerCase().includes(query)
      );

      displayResults(filtered, query);
    }

    function displayResults(results: typeof articles, query: string) {
      searchResults.innerHTML = '';

      if (results.length === 0) {
        searchResults.innerHTML = `
          <div class="p-4 text-center text-gray-600">
            <svg class="w-8 h-8 mb-2 text-gray-300 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            <p class="text-sm font-InstrumentSans">No articles found for "${query}"</p>
            <p class="text-xs mt-1 font-InstrumentSans">Try different keywords or browse our categories</p>
          </div>
        `;
      } else {
        results.forEach(article => {
          const resultElement = resultTemplate.content.cloneNode(true) as DocumentFragment;
          
          const titleEl = resultElement.querySelector('.search-result-title');
          const excerptEl = resultElement.querySelector('.search-result-excerpt');
          const categoryEl = resultElement.querySelector('.category');
          const readTimeEl = resultElement.querySelector('.read-time');
          const itemEl = resultElement.querySelector('.search-result-item');

          if (titleEl && excerptEl && categoryEl && readTimeEl && itemEl) {
            titleEl.textContent = article.title;
            excerptEl.textContent = article.excerpt;
            categoryEl.textContent = article.category;
            readTimeEl.textContent = article.readTime;
            
            (itemEl as HTMLElement).addEventListener('click', () => {
              window.location.href = `/blog/${article.slug}`;
            });
          }

          searchResults.appendChild(resultElement);
        });
      }

      searchResults.classList.remove('hidden');
    }

    // Hide results when clicking outside
    document.addEventListener('click', function(event) {
      if (!searchInput.contains(event.target as Node) && !searchResults.contains(event.target as Node)) {
        searchResults.classList.add('hidden');
      }
    });

    // Show results when focusing on input (if there's content)
    searchInput.addEventListener('focus', function() {
      if (this.value.trim().length >= 2) {
        searchResults.classList.remove('hidden');
      }
    });
  });
</script>

<style>
  .search-input {
    /* Sharp corners - no border-radius */
  }

  .search-results {
    /* Sharp corners - no border-radius */
  }

  .search-result-item:last-child {
    @apply border-b-0;
  }
</style>