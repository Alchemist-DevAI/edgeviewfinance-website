---
import { getCollection } from "astro:content";

const services = await getCollection("IndexPage", ({ slug }) => {
  return slug === "services";
});

const serviceData = services[0]?.data;
---

<section class="relative overflow-hidden bg-gray-900 px-6 py-24 sm:py-32 lg:px-8">
  <div class="absolute inset-0 -z-10 bg-[radial-gradient(45rem_50rem_at_top,theme(colors.indigo.100),white)] opacity-20"></div>
  <div class="absolute inset-y-0 right-1/2 -z-10 mr-16 w-[200%] origin-bottom-left skew-x-[-30deg] bg-white shadow-xl shadow-indigo-600/10 ring-1 ring-indigo-50 sm:mr-28 lg:mr-0 xl:mr-16 xl:origin-center"></div>

  <div class="mx-auto max-w-7xl">
    <!-- Section Header -->
    {serviceData?.title && (
      <div class="mx-auto max-w-2xl lg:mx-0">
        <h2 class="text-3xl font-bold tracking-tight text-white sm:text-4xl">
          {serviceData.title}
        </h2>
        {serviceData.subtitle && (
          <p class="mt-6 text-lg leading-8 text-gray-300">
            {serviceData.subtitle}
          </p>
        )}
      </div>
    )}

    <!-- Services Grid -->
    <div class="mx-auto mt-16 grid max-w-2xl grid-cols-1 gap-6 sm:mt-20 lg:mx-0 lg:max-w-none lg:grid-cols-3">
      {serviceData?.services?.map((service) => (
        <div class="flex flex-col bg-white/10 backdrop-blur-sm border border-white/20 rounded-2xl p-8 hover:bg-white/20 transition-all duration-300">
          <!-- Service Icon -->
          {service.icon && (
            <div class="flex h-12 w-12 items-center justify-center rounded-lg bg-orange-500">
              <i class={`${service.icon} text-white text-xl`}></i>
            </div>
          )}

          <!-- Service Content -->
          <div class="mt-6 flex-1">
            <h3 class="text-xl font-semibold text-white">
              {service.title}
            </h3>
            {service.description && (
              <p class="mt-4 text-gray-300 leading-relaxed">
                {service.description}
              </p>
            )}

            <!-- Service Features -->
            {service.features && service.features.length > 0 && (
              <ul class="mt-6 space-y-2">
                {service.features.map((feature) => (
                  <li class="flex items-center text-sm text-gray-300">
                    <svg class="mr-3 h-4 w-4 text-orange-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                    </svg>
                    {feature}
                  </li>
                ))}
              </ul>
            )}
          </div>

          <!-- Service CTA Button - FIXED: Changed text color to white -->
          {service.cta && (
            <div class="mt-8">
              <a
                href={service.cta.link || '#'}
                class="inline-flex w-full justify-center items-center px-6 py-3 bg-orange-500 hover:bg-orange-600 text-white font-semibold rounded-lg transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 focus:ring-offset-gray-900"
              >
                {service.cta.text}
                <svg class="ml-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </div>
          )}
        </div>
      ))}
    </div>

    <!-- Additional CTA Section -->
    {serviceData?.bottomCta && (
      <div class="mt-16 text-center">
        <h3 class="text-2xl font-bold text-white mb-4">
          {serviceData.bottomCta.title}
        </h3>
        {serviceData.bottomCta.description && (
          <p class="text-gray-300 mb-8 max-w-2xl mx-auto">
            {serviceData.bottomCta.description}
          </p>
        )}
        {serviceData.bottomCta.button && (
          <a
            href={serviceData.bottomCta.button.link || '#'}
            class="inline-flex items-center px-8 py-4 bg-orange-500 hover:bg-orange-600 text-white font-semibold rounded-lg transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 focus:ring-offset-gray-900"
          >
            {serviceData.bottomCta.button.text}
          </a>
        )}
      </div>
    )}
  </div>
</section>